<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.limingyi.dao.UserMapper">
  <resultMap id="BaseResultMap" type="com.limingyi.entity.User">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="phone_num" jdbcType="VARCHAR" property="phoneNum" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="credit" jdbcType="INTEGER" property="credit" />
    <result column="avatar" jdbcType="VARCHAR" property="avatar" />
     <result column="emailcode" jdbcType="VARCHAR" property="emailcode" />
    <result column="type" jdbcType="TINYINT" property="type" />
    <result column="state" jdbcType="TINYINT" property="state" />
  </resultMap>
  
  <sql id="Base_Column_List" >
    id, username, password, email, phone_num, create_time, update_time, credit, avatar, emailcode
    ,type,state
  </sql>

  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    from user
    where id = #{id,jdbcType=INTEGER}
  </select>

  <select id="getUserCount" resultType="java.lang.Integer" >
    select
    count(*)
    from user
  </select>
  <!-- 获取普通用户列表 -->
  <select id="getUsersAll" resultMap="BaseResultMap" resultType="java.lang.Integer" >
    select
   <include refid="Base_Column_List" />
    from user where type = 0 order by id ASC ;
  </select>
  <!-- 获取管理员列表 -->
<select id="getAdmin" resultMap="BaseResultMap" resultType="java.lang.Integer" >
    select
   <include refid="Base_Column_List" />
    from user where type = 1 order by id ASC ;
  </select>

  <select id="selectByUsername" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select
    <include refid="Base_Column_List" />
    from user
    where username = #{username,jdbcType=VARCHAR}
  </select>

  <select id="existUsername" parameterType="java.lang.String" resultType="java.lang.Integer">
    SELECT count(*) from user where username = #{username,jdbcType=VARCHAR}
  </select>
  <!-- 统计当天的用户数 -->
	<select id="countToday" resultType="java.lang.Integer">
        select count(1)
        from user a
        where TO_DAYS(a.create_time) = TO_DAYS(NOW())
    </select>
    <!-- 查找后台用户列表 -->
    <select id="selectAllForAdmin" parameterType="java.lang.String" resultMap="BaseResultMap" >
    SELECT 
    <include refid="Base_Column_List" />
    from user where
		
		 username = #{username}
		
		or
		
		 email = #{email}
	
	
     </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="addUser" parameterType="com.limingyi.entity.User" >
    insert into user (username, password,
      email, phone_num, create_time, 
      update_time, credit,
      type,avatar,state,emailcode)
    values (#{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR},
      #{email,jdbcType=VARCHAR}, #{phoneNum,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{credit,jdbcType=INTEGER},
      #{type,jdbcType=TINYINT},#{avatar,jdbcType=VARCHAR},#{state,jdbcType=TINYINT},#{emailcode,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.limingyi.entity.User" >
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="username != null" >
        username,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="phoneNum != null" >
        phone_num,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="credit != null" >
        credit,
      </if>
      <if test="avatar != null" >
        avatar,
      </if>
      <if test="type != null" >
        type,
      </if>
       <if test="state != null" >
        state,
      </if>
       <if test="emailcode != null" >
        emailcode,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="phoneNum != null" >
        #{phoneNum,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="credit != null" >
        #{credit,jdbcType=INTEGER},
      </if>
      <if test="avatar != null" >
        #{avatar,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=TINYINT},
      </if>
        <if test="state != null" >
        #{state,jdbcType=TINYINT},
      </if>
      <if test="emailcode != null" >
        #{emailcode,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.limingyi.entity.User" >
    update user
    <set >
      <if test="username != null" >
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="phoneNum != null" >
        phone_num = #{phoneNum,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="credit != null" >
        credit = #{credit,jdbcType=INTEGER},
      </if>
      <if test="avatar != null" >
        avatar = #{avatar,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=TINYINT},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=TINYINT},
      </if>
       <if test="emailcode != null" >
       emailcode= #{emailcode,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.limingyi.entity.User" >
    update user
    set username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      phone_num = #{phoneNum,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      credit = #{credit,jdbcType=INTEGER},
      avatar = #{avatar,jdbcType=VARCHAR},
      type = #{type,jdbcType=TINYINT},
       state = #{state,jdbcType=TINYINT},
        #{emailcode,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <update id="addCredit">
    update user set credit = credit + #{points,jdbcType=INTEGER} WHERE id = #{id,jdbcType=INTEGER}
  </update>
</mapper>